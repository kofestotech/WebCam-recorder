{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","playing","setPlaying","classname","className","height","width","muted","autoplay","onClick","document","getElementsByClassName","srcObject","getTracks","stop","navigator","getUserMedia","video","stream","err","console","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8MAsDeA,MAnDf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,KA4Bb,OACC,sBAAKC,UAAU,MAAf,UACE,qBAAKC,UAAU,gBAAf,SACE,uBACEC,OA7BQ,IA8BRC,MA7BO,IA8BPC,OAAK,EACLC,UAAQ,EACRJ,UAAU,oBAGd,qBAAKA,UAAU,YAAf,SACGH,EACC,wBAAQQ,QAnBE,WACfP,GAAW,GACCQ,SAASC,uBAAuB,iBAAiB,GACvDC,UAAUC,YAAY,GAAGC,QAgB1B,kBAED,wBAAQL,QArCI,WAChBP,GAAW,GACXa,UAAUC,aACR,CACEC,OAAM,IAER,SAACC,GACC,IAAID,EAAQP,SAASC,uBAAuB,iBAAiB,GAC1DM,IACDA,EAAML,UAAWM,MAGrB,SAACC,GAAD,OAAOC,QAAQC,MAAMF,OAyBnB,yBClCOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,SAM1BZ,K","file":"static/js/main.caf90818.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [playing, setPlaying ]= useState(false);\n\n  const HEIGHT = 500;\n  const WIDTH = 500;\n\n  const startVideo =() => {\n    setPlaying(true);\n    navigator.getUserMedia(\n      {\n        video:true,\n      },\n      (stream)=>{\n        let video = document.getElementsByClassName(\"app_videoFeed\")[0];\n        if(video){\n          video.srcObject= stream;\n        }\n      },\n      (err)=>console.error(err)\n    );\n  };\n\n  const stopVideo =() => {\n    setPlaying(false);\n    let video = document.getElementsByClassName(\"app_videoFeed\")[0];\n    video.srcObject.getTracks()[0].stop();\n  }; \n\n  return (\n   <div classname=\"app\">\n     <div className=\"app_container\">\n       <video\n         height={HEIGHT}\n         width={WIDTH}\n         muted\n         autoplay\n         className=\"app_videoFeed\">\n       </video>\n     </div>\n     <div className=\"app_input\">\n       {playing ?(\n         <button onClick= {stopVideo}>Stop</button>\n       ):(\n        <button onClick= {startVideo}>Start</button>\n       )}\n\n     </div>\n   </div>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}